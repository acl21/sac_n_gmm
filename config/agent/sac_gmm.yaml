agent:
  _target_: sac_gmm.networks.sac.SACAgent
  obs_dim: ??? # to be specified later
  action_dim: ??? # to be specified later
  action_range: ??? # to be specified later
  device: ${device}
  critic_cfg: ${..double_q_critic}
  actor_cfg: ${..diag_gaussian_actor}
  autoencoder_cfg: ${..autoencoder}
  discount: 0.99
  init_temperature: 0.1
  alpha_lr: 3e-4
  alpha_betas: [0.9, 0.999]
  actor_lr: 3e-4
  actor_betas: [0.9, 0.999]
  actor_update_frequency: 1
  critic_lr: 3e-4
  critic_betas: [0.9, 0.999]
  critic_tau: 0.005
  critic_target_update_frequency: 2
  batch_size: 1024
  learnable_temperature: true
  ae_lr: 3e-5
      
double_q_critic:
  _target_: sac_gmm.networks.critic.DoubleQCritic
  obs_dim: ${..agent.obs_dim}
  action_dim: ${..agent.action_dim}
  hidden_dim: 256
  hidden_depth: 2
  
diag_gaussian_actor:
  _target_: sac_gmm.networks.actor.DiagGaussianActor
  obs_dim: ${..agent.obs_dim}
  action_dim: ${..agent.action_dim}
  hidden_depth: 2
  hidden_dim: 256
  log_std_bounds: [-5, 2]

autoencoder:
  _target_: sac_gmm.networks.autoencoder.AutoEncoder
  hd_input_space: [64, 64]
  in_channels: 1
  hidden_dim: 8
  late_fusion: false
  latent_lambda: 0